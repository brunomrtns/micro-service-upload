{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import express from 'express'\n\nimport cors from 'cors'\nimport morgan from 'morgan'\n\nimport { exception, exceptionValidation, notFound } from './middlewares'\n\nimport { router } from './router'\n\nimport dotenv from 'dotenv'\ndotenv.config()\n\nconst app = express()\n\napp.use(express.json({ limit: '50mb' }))\napp.use(express.urlencoded({ extended: true }))\napp.use(express.static('public'))\n\napp.use(morgan(':method :url :status :res[content-length] - :response-time ms'))\n\napp.use(\n  cors({\n    origin: '*',\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    credentials: true\n  })\n)\napp.options('*', cors())\napp.set('trust proxy', ['loopback', 'linklocal', 'uniquelocal'])\n\napp.use(router)\n\napp.use(notFound)\napp.use(exceptionValidation)\napp.use(exception)\n\nexport default app\n"],"names":["dotenv","config","app","express","use","json","limit","urlencoded","extended","static","morgan","cors","origin","methods","allowedHeaders","credentials","options","set","router","notFound","exceptionValidation","exception"],"mappings":";;;;+BAqCA;;;eAAA;;;gEArCoB;6DAEH;+DACE;6BAEsC;wBAElC;+DAEJ;;;;;;AACnBA,eAAM,CAACC,MAAM;AAEb,MAAMC,MAAMC,IAAAA,gBAAO;AAEnBD,IAAIE,GAAG,CAACD,gBAAO,CAACE,IAAI,CAAC;IAAEC,OAAO;AAAO;AACrCJ,IAAIE,GAAG,CAACD,gBAAO,CAACI,UAAU,CAAC;IAAEC,UAAU;AAAK;AAC5CN,IAAIE,GAAG,CAACD,gBAAO,CAACM,MAAM,CAAC;AAEvBP,IAAIE,GAAG,CAACM,IAAAA,eAAM,EAAC;AAEfR,IAAIE,GAAG,CACLO,IAAAA,aAAI,EAAC;IACHC,QAAQ;IACRC,SAAS;QAAC;QAAO;QAAQ;QAAO;QAAU;KAAU;IACpDC,gBAAgB;QAAC;QAAgB;KAAgB;IACjDC,aAAa;AACf;AAEFb,IAAIc,OAAO,CAAC,KAAKL,IAAAA,aAAI;AACrBT,IAAIe,GAAG,CAAC,eAAe;IAAC;IAAY;IAAa;CAAc;AAE/Df,IAAIE,GAAG,CAACc,cAAM;AAEdhB,IAAIE,GAAG,CAACe,qBAAQ;AAChBjB,IAAIE,GAAG,CAACgB,gCAAmB;AAC3BlB,IAAIE,GAAG,CAACiB,sBAAS;MAEjB,WAAenB"}